

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Oct 31 12:16:49 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4331
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    15  0000                     _LATAbits	set	3977
    16  0000                     _LATCbits	set	3979
    17  0000                     _LATDbits	set	3980
    18  0000                     _OSCCON	set	4051
    19  0000                     _OSCCONbits	set	4051
    20  0000                     _TRISAbits	set	3986
    21  0000                     _TRISC	set	3988
    22  0000                     _TRISD	set	3989
    23                           
    24                           ; #config settings
    25  0000                     
    26                           	psect	cinit
    27  001DE0                     __pcinit:
    28                           	opt stack 0
    29  001DE0                     start_initialization:
    30                           	opt stack 0
    31  001DE0                     __initialization:
    32                           	opt stack 0
    33  001DE0                     end_of_initialization:
    34                           	opt stack 0
    35  001DE0                     __end_of__initialization:
    36                           	opt stack 0
    37  001DE0  0100               	movlb	0
    38  001DE2  EF67  F00F         	goto	_main	;jump to C main() function
    39                           
    40                           	psect	cstackCOMRAM
    41  000001                     __pcstackCOMRAM:
    42                           	opt stack 0
    43  000001                     ??_LCDout:
    44                           
    45                           ; 0 bytes @ 0x0
    46  000001                     	ds	1
    47  000002                     LCDout@number:
    48                           	opt stack 0
    49                           
    50                           ; 1 bytes @ 0x1
    51  000002                     	ds	1
    52  000003                     SendLCD@type:
    53                           	opt stack 0
    54                           
    55                           ; 1 bytes @ 0x2
    56  000003                     	ds	1
    57  000004                     SendLCD@Byte:
    58                           	opt stack 0
    59                           
    60                           ; 1 bytes @ 0x3
    61  000004                     	ds	1
    62  000005                     ??_LCD_Init:
    63  000005                     SetLine@line:
    64                           	opt stack 0
    65                           
    66                           ; 1 bytes @ 0x4
    67  000005                     	ds	1
    68  000006                     
    69                           ; 0 bytes @ 0x5
    70 ;;
    71 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    72 ;;
    73 ;; *************** function _main *****************
    74 ;; Defined at:
    75 ;;		line 31 in file "main.c"
    76 ;; Parameters:    Size  Location     Type
    77 ;;		None
    78 ;; Auto vars:     Size  Location     Type
    79 ;;		None
    80 ;; Return value:  Size  Location     Type
    81 ;;		None               void
    82 ;; Registers used:
    83 ;;		wreg, status,2, status,0, cstack
    84 ;; Tracked objects:
    85 ;;		On entry : 0/0
    86 ;;		On exit  : 0/0
    87 ;;		Unchanged: 0/0
    88 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
    89 ;;      Params:         0       0       0       0
    90 ;;      Locals:         0       0       0       0
    91 ;;      Temps:          0       0       0       0
    92 ;;      Totals:         0       0       0       0
    93 ;;Total ram usage:        0 bytes
    94 ;; Hardware stack levels required when called:    4
    95 ;; This function calls:
    96 ;;		_LCD_Init
    97 ;;		_SendLCD
    98 ;;		_SetLine
    99 ;; This function is called by:
   100 ;;		Startup code after reset
   101 ;; This function uses a non-reentrant model
   102 ;;
   103                           
   104                           	psect	text0
   105  001ECE                     __ptext0:
   106                           	opt stack 0
   107  001ECE                     _main:
   108                           	opt stack 27
   109                           
   110                           ;main.c: 32: OSCCON = 0x72;
   111                           
   112                           ;incstack = 0
   113  001ECE  0E72               	movlw	114
   114  001ED0  6ED3               	movwf	4051,c	;volatile
   115  001ED2                     l27:
   116  001ED2  A4D3               	btfss	4051,2,c	;volatile
   117  001ED4  D7FE               	goto	l27
   118                           
   119                           ;main.c: 35: LCD_Init();
   120  001ED6  ECAD  F00F         	call	_LCD_Init	;wreg free
   121                           
   122                           ;main.c: 37: SetLine(1);
   123  001EDA  0E01               	movlw	1
   124  001EDC  EC0D  F00F         	call	_SetLine
   125                           
   126                           ;main.c: 38: SendLCD(0x48,1);
   127  001EE0  0E01               	movlw	1
   128  001EE2  6E03               	movwf	SendLCD@type,c
   129  001EE4  0E48               	movlw	72
   130  001EE6  ECFA  F00E         	call	_SendLCD
   131                           
   132                           ;main.c: 39: SendLCD(0x65,1);
   133  001EEA  0E01               	movlw	1
   134  001EEC  6E03               	movwf	SendLCD@type,c
   135  001EEE  0E65               	movlw	101
   136  001EF0  ECFA  F00E         	call	_SendLCD
   137                           
   138                           ;main.c: 40: SendLCD(0x6C,1);
   139  001EF4  0E01               	movlw	1
   140  001EF6  6E03               	movwf	SendLCD@type,c
   141  001EF8  0E6C               	movlw	108
   142  001EFA  ECFA  F00E         	call	_SendLCD
   143                           
   144                           ;main.c: 41: SendLCD(0x6C,1);
   145  001EFE  0E01               	movlw	1
   146  001F00  6E03               	movwf	SendLCD@type,c
   147  001F02  0E6C               	movlw	108
   148  001F04  ECFA  F00E         	call	_SendLCD
   149                           
   150                           ;main.c: 42: SendLCD(0x6F,1);
   151  001F08  0E01               	movlw	1
   152  001F0A  6E03               	movwf	SendLCD@type,c
   153  001F0C  0E6F               	movlw	111
   154  001F0E  ECFA  F00E         	call	_SendLCD
   155                           
   156                           ;main.c: 43: SendLCD(0x20,1);
   157  001F12  0E01               	movlw	1
   158  001F14  6E03               	movwf	SendLCD@type,c
   159  001F16  0E20               	movlw	32
   160  001F18  ECFA  F00E         	call	_SendLCD
   161                           
   162                           ;main.c: 44: SendLCD(0x57,1);
   163  001F1C  0E01               	movlw	1
   164  001F1E  6E03               	movwf	SendLCD@type,c
   165  001F20  0E57               	movlw	87
   166  001F22  ECFA  F00E         	call	_SendLCD
   167                           
   168                           ;main.c: 45: SendLCD(0x6F,1);
   169  001F26  0E01               	movlw	1
   170  001F28  6E03               	movwf	SendLCD@type,c
   171  001F2A  0E6F               	movlw	111
   172  001F2C  ECFA  F00E         	call	_SendLCD
   173                           
   174                           ;main.c: 46: SendLCD(0x72,1);
   175  001F30  0E01               	movlw	1
   176  001F32  6E03               	movwf	SendLCD@type,c
   177  001F34  0E72               	movlw	114
   178  001F36  ECFA  F00E         	call	_SendLCD
   179                           
   180                           ;main.c: 47: SendLCD(0x6C,1);
   181  001F3A  0E01               	movlw	1
   182  001F3C  6E03               	movwf	SendLCD@type,c
   183  001F3E  0E6C               	movlw	108
   184  001F40  ECFA  F00E         	call	_SendLCD
   185                           
   186                           ;main.c: 48: SendLCD(0x64,1);
   187  001F44  0E01               	movlw	1
   188  001F46  6E03               	movwf	SendLCD@type,c
   189  001F48  0E64               	movlw	100
   190  001F4A  ECFA  F00E         	call	_SendLCD
   191                           
   192                           ;main.c: 49: SendLCD(0x21,1);
   193  001F4E  0E01               	movlw	1
   194  001F50  6E03               	movwf	SendLCD@type,c
   195  001F52  0E21               	movlw	33
   196  001F54  ECFA  F00E         	call	_SendLCD
   197  001F58  D7FF               	goto	l31
   198  001F5A                     __end_of_main:
   199                           	opt stack 0
   200                           
   201 ;; *************** function _SetLine *****************
   202 ;; Defined at:
   203 ;;		line 130 in file "main.c"
   204 ;; Parameters:    Size  Location     Type
   205 ;;  line            1    wreg     unsigned char 
   206 ;; Auto vars:     Size  Location     Type
   207 ;;  line            1    4[COMRAM] unsigned char 
   208 ;; Return value:  Size  Location     Type
   209 ;;		None               void
   210 ;; Registers used:
   211 ;;		wreg, status,2, status,0, cstack
   212 ;; Tracked objects:
   213 ;;		On entry : 0/0
   214 ;;		On exit  : 0/0
   215 ;;		Unchanged: 0/0
   216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   217 ;;      Params:         0       0       0       0
   218 ;;      Locals:         1       0       0       0
   219 ;;      Temps:          0       0       0       0
   220 ;;      Totals:         1       0       0       0
   221 ;;Total ram usage:        1 bytes
   222 ;; Hardware stack levels used:    1
   223 ;; Hardware stack levels required when called:    3
   224 ;; This function calls:
   225 ;;		_SendLCD
   226 ;; This function is called by:
   227 ;;		_main
   228 ;; This function uses a non-reentrant model
   229 ;;
   230                           
   231                           	psect	text1
   232  001E1A                     __ptext1:
   233                           	opt stack 0
   234  001E1A                     _SetLine:
   235                           	opt stack 27
   236                           
   237                           ;incstack = 0
   238                           ;SetLine@line stored from wreg
   239  001E1A  6E05               	movwf	SetLine@line,c
   240                           
   241                           ;main.c: 133: if(line == 1) {
   242  001E1C  0405               	decf	SetLine@line,w,c
   243  001E1E  A4D8               	btfss	status,2,c
   244  001E20  D006               	goto	l794
   245                           
   246                           ;main.c: 134: SendLCD(0x80,0);
   247  001E22  0E00               	movlw	0
   248  001E24  6E03               	movwf	SendLCD@type,c
   249  001E26  0E80               	movlw	128
   250  001E28  ECFA  F00E         	call	_SendLCD
   251                           
   252                           ;main.c: 135: } else if (line == 2) {
   253  001E2C  D00F               	goto	l800
   254  001E2E                     l794:
   255  001E2E  0E02               	movlw	2
   256  001E30  1805               	xorwf	SetLine@line,w,c
   257  001E32  A4D8               	btfss	status,2,c
   258  001E34  D006               	goto	l798
   259                           
   260                           ;main.c: 136: SendLCD(0xC0,0);
   261  001E36  0E00               	movlw	0
   262  001E38  6E03               	movwf	SendLCD@type,c
   263  001E3A  0EC0               	movlw	192
   264  001E3C  ECFA  F00E         	call	_SendLCD
   265                           
   266                           ;main.c: 137: } else {
   267  001E40  D005               	goto	l800
   268  001E42                     l798:
   269                           
   270                           ;main.c: 138: SendLCD(0x80,0);
   271  001E42  0E00               	movlw	0
   272  001E44  6E03               	movwf	SendLCD@type,c
   273  001E46  0E80               	movlw	128
   274  001E48  ECFA  F00E         	call	_SendLCD
   275  001E4C                     l800:
   276                           
   277                           ;main.c: 139: }
   278                           ;main.c: 140: _delay((unsigned long)((50)*(8000000/4000000.0)));
   279  001E4C  0E21               	movlw	33
   280  001E4E                     u97:
   281  001E4E  2EE8               	decfsz	wreg,f,c
   282  001E50  D7FE               	goto	u97
   283  001E52  F000               	nop	
   284  001E54  0012               	return		;funcret
   285  001E56                     __end_of_SetLine:
   286                           	opt stack 0
   287                           wreg	equ	0xFE8
   288                           status	equ	0xFD8
   289                           
   290 ;; *************** function _LCD_Init *****************
   291 ;; Defined at:
   292 ;;		line 91 in file "main.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;		None
   295 ;; Auto vars:     Size  Location     Type
   296 ;;		None
   297 ;; Return value:  Size  Location     Type
   298 ;;		None               void
   299 ;; Registers used:
   300 ;;		wreg, status,2, status,0, cstack
   301 ;; Tracked objects:
   302 ;;		On entry : 0/0
   303 ;;		On exit  : 0/0
   304 ;;		Unchanged: 0/0
   305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   306 ;;      Params:         0       0       0       0
   307 ;;      Locals:         0       0       0       0
   308 ;;      Temps:          1       0       0       0
   309 ;;      Totals:         1       0       0       0
   310 ;;Total ram usage:        1 bytes
   311 ;; Hardware stack levels used:    1
   312 ;; Hardware stack levels required when called:    3
   313 ;; This function calls:
   314 ;;		_LCDout
   315 ;;		_SendLCD
   316 ;; This function is called by:
   317 ;;		_main
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           	psect	text2
   322  001F5A                     __ptext2:
   323                           	opt stack 0
   324  001F5A                     _LCD_Init:
   325                           	opt stack 27
   326                           
   327                           ;main.c: 93: TRISAbits.RA6 = 0;
   328                           
   329                           ;incstack = 0
   330  001F5A  9C92               	bcf	3986,6,c	;volatile
   331                           
   332                           ;main.c: 94: TRISC &= 0b11111000;
   333  001F5C  0EF8               	movlw	248
   334  001F5E  1694               	andwf	3988,f,c	;volatile
   335                           
   336                           ;main.c: 95: TRISD &= 0b11111100;
   337  001F60  0EFC               	movlw	252
   338  001F62  1695               	andwf	3989,f,c	;volatile
   339                           
   340                           ;main.c: 97: LATCbits.LC0 = 0;
   341  001F64  908B               	bcf	3979,0,c	;volatile
   342                           
   343                           ;main.c: 98: LATAbits.LA6 = 0;
   344  001F66  9C89               	bcf	3977,6,c	;volatile
   345                           
   346                           ;main.c: 99: LATDbits.LD1 = 0;
   347  001F68  928C               	bcf	3980,1,c	;volatile
   348                           
   349                           ;main.c: 100: LATDbits.LD0 = 0;
   350  001F6A  908C               	bcf	3980,0,c	;volatile
   351                           
   352                           ;main.c: 101: LATCbits.LC2 = 0;
   353  001F6C  948B               	bcf	3979,2,c	;volatile
   354                           
   355                           ;main.c: 102: LATCbits.LC1 = 0;
   356  001F6E  928B               	bcf	3979,1,c	;volatile
   357                           
   358                           ;main.c: 105: LCDout(0b0011);
   359  001F70  0E03               	movlw	3
   360  001F72  EC2B  F00F         	call	_LCDout
   361                           
   362                           ;main.c: 106: _delay((unsigned long)((5000)*(8000000/4000000.0)));
   363  001F76  0E0D               	movlw	13
   364  001F78  6E05               	movwf	??_LCD_Init& (0+255),c
   365  001F7A  0EFC               	movlw	252
   366  001F7C                     u107:
   367  001F7C  2EE8               	decfsz	wreg,f,c
   368  001F7E  D7FE               	goto	u107
   369  001F80  2E05               	decfsz	??_LCD_Init& (0+255),f,c
   370  001F82  D7FC               	goto	u107
   371                           
   372                           ;main.c: 107: LCDout(0b0011);
   373  001F84  0E03               	movlw	3
   374  001F86  EC2B  F00F         	call	_LCDout
   375                           
   376                           ;main.c: 108: _delay((unsigned long)((200)*(8000000/4000000.0)));
   377  001F8A  0E85               	movlw	133
   378  001F8C                     u117:
   379  001F8C  2EE8               	decfsz	wreg,f,c
   380  001F8E  D7FE               	goto	u117
   381  001F90  F000               	nop	
   382                           
   383                           ;main.c: 109: LCDout(0b0011);
   384  001F92  0E03               	movlw	3
   385  001F94  EC2B  F00F         	call	_LCDout
   386                           
   387                           ;main.c: 110: _delay((unsigned long)((50)*(8000000/4000000.0)));
   388  001F98  0E21               	movlw	33
   389  001F9A                     u127:
   390  001F9A  2EE8               	decfsz	wreg,f,c
   391  001F9C  D7FE               	goto	u127
   392  001F9E  F000               	nop	
   393                           
   394                           ;main.c: 112: LCDout(0b0010);
   395  001FA0  0E02               	movlw	2
   396  001FA2  EC2B  F00F         	call	_LCDout
   397                           
   398                           ;main.c: 113: _delay((unsigned long)((50)*(8000000/4000000.0)));
   399  001FA6  0E21               	movlw	33
   400  001FA8                     u137:
   401  001FA8  2EE8               	decfsz	wreg,f,c
   402  001FAA  D7FE               	goto	u137
   403  001FAC  F000               	nop	
   404                           
   405                           ;main.c: 115: SendLCD(0b00001000,0);
   406  001FAE  0E00               	movlw	0
   407  001FB0  6E03               	movwf	SendLCD@type,c
   408  001FB2  0E08               	movlw	8
   409  001FB4  ECFA  F00E         	call	_SendLCD
   410                           
   411                           ;main.c: 116: _delay((unsigned long)((50)*(8000000/4000000.0)));
   412  001FB8  0E21               	movlw	33
   413  001FBA                     u147:
   414  001FBA  2EE8               	decfsz	wreg,f,c
   415  001FBC  D7FE               	goto	u147
   416  001FBE  F000               	nop	
   417                           
   418                           ;main.c: 118: SendLCD(0b00000001,0);
   419  001FC0  0E00               	movlw	0
   420  001FC2  6E03               	movwf	SendLCD@type,c
   421  001FC4  0E01               	movlw	1
   422  001FC6  ECFA  F00E         	call	_SendLCD
   423                           
   424                           ;main.c: 119: _delay((unsigned long)((1700)*(8000000/4000000.0)));
   425  001FCA  0E05               	movlw	5
   426  001FCC  6E05               	movwf	??_LCD_Init& (0+255),c
   427  001FCE  0E69               	movlw	105
   428  001FD0                     u157:
   429  001FD0  2EE8               	decfsz	wreg,f,c
   430  001FD2  D7FE               	goto	u157
   431  001FD4  2E05               	decfsz	??_LCD_Init& (0+255),f,c
   432  001FD6  D7FC               	goto	u157
   433  001FD8  F000               	nop	
   434                           
   435                           ;main.c: 121: SendLCD(0b00000110,0);
   436  001FDA  0E00               	movlw	0
   437  001FDC  6E03               	movwf	SendLCD@type,c
   438  001FDE  0E06               	movlw	6
   439  001FE0  ECFA  F00E         	call	_SendLCD
   440                           
   441                           ;main.c: 122: _delay((unsigned long)((50)*(8000000/4000000.0)));
   442  001FE4  0E21               	movlw	33
   443  001FE6                     u167:
   444  001FE6  2EE8               	decfsz	wreg,f,c
   445  001FE8  D7FE               	goto	u167
   446  001FEA  F000               	nop	
   447                           
   448                           ;main.c: 124: SendLCD(0b00001100, 0);
   449  001FEC  0E00               	movlw	0
   450  001FEE  6E03               	movwf	SendLCD@type,c
   451  001FF0  0E0C               	movlw	12
   452  001FF2  ECFA  F00E         	call	_SendLCD
   453                           
   454                           ;main.c: 125: _delay((unsigned long)((50)*(8000000/4000000.0)));
   455  001FF6  0E21               	movlw	33
   456  001FF8                     u177:
   457  001FF8  2EE8               	decfsz	wreg,f,c
   458  001FFA  D7FE               	goto	u177
   459  001FFC  F000               	nop	
   460  001FFE  0012               	return		;funcret
   461  002000                     __end_of_LCD_Init:
   462                           	opt stack 0
   463                           wreg	equ	0xFE8
   464                           status	equ	0xFD8
   465                           
   466 ;; *************** function _SendLCD *****************
   467 ;; Defined at:
   468 ;;		line 81 in file "main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;  Byte            1    wreg     unsigned char 
   471 ;;  type            1    2[COMRAM] unsigned char 
   472 ;; Auto vars:     Size  Location     Type
   473 ;;  Byte            1    3[COMRAM] unsigned char 
   474 ;; Return value:  Size  Location     Type
   475 ;;		None               void
   476 ;; Registers used:
   477 ;;		wreg, status,2, status,0, cstack
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   483 ;;      Params:         1       0       0       0
   484 ;;      Locals:         1       0       0       0
   485 ;;      Temps:          0       0       0       0
   486 ;;      Totals:         2       0       0       0
   487 ;;Total ram usage:        2 bytes
   488 ;; Hardware stack levels used:    1
   489 ;; Hardware stack levels required when called:    2
   490 ;; This function calls:
   491 ;;		_LCDout
   492 ;; This function is called by:
   493 ;;		_main
   494 ;;		_LCD_Init
   495 ;;		_SetLine
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           	psect	text3
   500  001DF4                     __ptext3:
   501                           	opt stack 0
   502  001DF4                     _SendLCD:
   503                           	opt stack 27
   504                           
   505                           ;incstack = 0
   506                           ;SendLCD@Byte stored from wreg
   507  001DF4  6E04               	movwf	SendLCD@Byte,c
   508                           
   509                           ;main.c: 84: LATAbits.LA6 = type;
   510  001DF6  B003               	btfsc	SendLCD@type,0,c
   511  001DF8  D002               	bra	u55
   512  001DFA  9C89               	bcf	3977,6,c	;volatile
   513  001DFC  D001               	bra	u56
   514  001DFE                     u55:
   515  001DFE  8C89               	bsf	3977,6,c	;volatile
   516  001E00                     u56:
   517                           
   518                           ;main.c: 86: LCDout(Byte >> 4);
   519  001E00  3804               	swapf	SendLCD@Byte,w,c
   520  001E02  0B0F               	andlw	15
   521  001E04  EC2B  F00F         	call	_LCDout
   522                           
   523                           ;main.c: 87: _delay((unsigned long)((10)*(8000000/4000000.0)));
   524  001E08  0E06               	movlw	6
   525  001E0A                     u187:
   526  001E0A  2EE8               	decfsz	wreg,f,c
   527  001E0C  D7FE               	goto	u187
   528  001E0E  D000               	nop2		;nop
   529                           
   530                           ;main.c: 89: LCDout(Byte & 0b00001111);
   531  001E10  5004               	movf	SendLCD@Byte,w,c
   532  001E12  0B0F               	andlw	15
   533  001E14  EC2B  F00F         	call	_LCDout
   534  001E18  0012               	return		;funcret
   535  001E1A                     __end_of_SendLCD:
   536                           	opt stack 0
   537                           wreg	equ	0xFE8
   538                           status	equ	0xFD8
   539                           
   540 ;; *************** function _LCDout *****************
   541 ;; Defined at:
   542 ;;		line 70 in file "main.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;  number          1    wreg     unsigned char 
   545 ;; Auto vars:     Size  Location     Type
   546 ;;  number          1    1[COMRAM] unsigned char 
   547 ;; Return value:  Size  Location     Type
   548 ;;		None               void
   549 ;; Registers used:
   550 ;;		wreg, status,2, status,0, cstack
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   556 ;;      Params:         0       0       0       0
   557 ;;      Locals:         1       0       0       0
   558 ;;      Temps:          1       0       0       0
   559 ;;      Totals:         2       0       0       0
   560 ;;Total ram usage:        2 bytes
   561 ;; Hardware stack levels used:    1
   562 ;; Hardware stack levels required when called:    1
   563 ;; This function calls:
   564 ;;		_E_TOG
   565 ;; This function is called by:
   566 ;;		_SendLCD
   567 ;;		_LCD_Init
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           	psect	text4
   572  001E56                     __ptext4:
   573                           	opt stack 0
   574  001E56                     _LCDout:
   575                           	opt stack 27
   576                           
   577                           ;incstack = 0
   578                           ;LCDout@number stored from wreg
   579  001E56  6E02               	movwf	LCDout@number,c
   580                           
   581                           ;main.c: 72: LATDbits.LD1 = number >> 3 & 0b00000001;
   582  001E58  C002  F001         	movff	LCDout@number,??_LCDout
   583  001E5C  90D8               	bcf	status,0,c
   584  001E5E  3201               	rrcf	??_LCDout,f,c
   585  001E60  90D8               	bcf	status,0,c
   586  001E62  3201               	rrcf	??_LCDout,f,c
   587  001E64  90D8               	bcf	status,0,c
   588  001E66  3201               	rrcf	??_LCDout,f,c
   589  001E68  0E01               	movlw	1
   590  001E6A  1601               	andwf	??_LCDout,f,c
   591  001E6C  4601               	rlncf	??_LCDout,f,c
   592  001E6E  508C               	movf	3980,w,c	;volatile
   593  001E70  1801               	xorwf	??_LCDout,w,c
   594  001E72  0BFD               	andlw	-3
   595  001E74  1801               	xorwf	??_LCDout,w,c
   596  001E76  6E8C               	movwf	3980,c	;volatile
   597                           
   598                           ;main.c: 73: LATDbits.LD0 = (number >> 2) & 0b00000001;
   599  001E78  C002  F001         	movff	LCDout@number,??_LCDout
   600  001E7C  90D8               	bcf	status,0,c
   601  001E7E  3201               	rrcf	??_LCDout,f,c
   602  001E80  90D8               	bcf	status,0,c
   603  001E82  3201               	rrcf	??_LCDout,f,c
   604  001E84  0E01               	movlw	1
   605  001E86  1601               	andwf	??_LCDout,f,c
   606  001E88  508C               	movf	3980,w,c	;volatile
   607  001E8A  1801               	xorwf	??_LCDout,w,c
   608  001E8C  0BFE               	andlw	-2
   609  001E8E  1801               	xorwf	??_LCDout,w,c
   610  001E90  6E8C               	movwf	3980,c	;volatile
   611                           
   612                           ;main.c: 74: LATCbits.LC2 = (number >> 1) & 0b00000001;
   613  001E92  C002  F001         	movff	LCDout@number,??_LCDout
   614  001E96  90D8               	bcf	status,0,c
   615  001E98  3201               	rrcf	??_LCDout,f,c
   616  001E9A  0E01               	movlw	1
   617  001E9C  1601               	andwf	??_LCDout,f,c
   618  001E9E  4601               	rlncf	??_LCDout,f,c
   619  001EA0  4601               	rlncf	??_LCDout,f,c
   620  001EA2  508B               	movf	3979,w,c	;volatile
   621  001EA4  1801               	xorwf	??_LCDout,w,c
   622  001EA6  0BFB               	andlw	-5
   623  001EA8  1801               	xorwf	??_LCDout,w,c
   624  001EAA  6E8B               	movwf	3979,c	;volatile
   625                           
   626                           ;main.c: 75: LATCbits.LC1 = number & 0b00000001;
   627  001EAC  C002  F001         	movff	LCDout@number,??_LCDout
   628  001EB0  0E01               	movlw	1
   629  001EB2  1601               	andwf	??_LCDout,f,c
   630  001EB4  4601               	rlncf	??_LCDout,f,c
   631  001EB6  508B               	movf	3979,w,c	;volatile
   632  001EB8  1801               	xorwf	??_LCDout,w,c
   633  001EBA  0BFD               	andlw	-3
   634  001EBC  1801               	xorwf	??_LCDout,w,c
   635  001EBE  6E8B               	movwf	3979,c	;volatile
   636                           
   637                           ;main.c: 77: E_TOG();
   638  001EC0  ECF3  F00E         	call	_E_TOG	;wreg free
   639                           
   640                           ;main.c: 78: _delay((unsigned long)((5)*(8000000/4000000.0)));
   641  001EC4  0E03               	movlw	3
   642  001EC6                     u197:
   643  001EC6  2EE8               	decfsz	wreg,f,c
   644  001EC8  D7FE               	goto	u197
   645  001ECA  F000               	nop	
   646  001ECC  0012               	return		;funcret
   647  001ECE                     __end_of_LCDout:
   648                           	opt stack 0
   649                           wreg	equ	0xFE8
   650                           status	equ	0xFD8
   651                           
   652 ;; *************** function _E_TOG *****************
   653 ;; Defined at:
   654 ;;		line 62 in file "main.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;		None               void
   661 ;; Registers used:
   662 ;;		wreg
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   668 ;;      Params:         0       0       0       0
   669 ;;      Locals:         0       0       0       0
   670 ;;      Temps:          0       0       0       0
   671 ;;      Totals:         0       0       0       0
   672 ;;Total ram usage:        0 bytes
   673 ;; Hardware stack levels used:    1
   674 ;; This function calls:
   675 ;;		Nothing
   676 ;; This function is called by:
   677 ;;		_LCDout
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           	psect	text5
   682  001DE6                     __ptext5:
   683                           	opt stack 0
   684  001DE6                     _E_TOG:
   685                           	opt stack 27
   686                           
   687                           ;main.c: 65: LATCbits.LC0 = 1;
   688                           
   689                           ;incstack = 0
   690  001DE6  808B               	bsf	3979,0,c	;volatile
   691                           
   692                           ;main.c: 66: _delay((unsigned long)((5)*(8000000/4000000.0)));
   693  001DE8  0E03               	movlw	3
   694  001DEA                     u207:
   695  001DEA  2EE8               	decfsz	wreg,f,c
   696  001DEC  D7FE               	goto	u207
   697  001DEE  F000               	nop	
   698                           
   699                           ;main.c: 67: LATCbits.LC0 = 0;
   700  001DF0  908B               	bcf	3979,0,c	;volatile
   701  001DF2  0012               	return		;funcret
   702  001DF4                     __end_of_E_TOG:
   703                           	opt stack 0
   704  0000                     wreg	equ	0xFE8
   705                           status	equ	0xFD8
   706                           wreg	equ	0xFE8
   707                           status	equ	0xFD8
   708                           
   709                           	psect	rparam
   710  0000                     wreg	equ	0xFE8
   711                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LCD_Init
    _main->_SetLine
    _SetLine->_SendLCD
    _LCD_Init->_SendLCD
    _SendLCD->_LCDout

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2933
                           _LCD_Init
                            _SendLCD
                            _SetLine
 ---------------------------------------------------------------------------------
 (1) _SetLine                                              1     1      0     987
                                              4 COMRAM     1     1      0
                            _SendLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0    1003
                                              4 COMRAM     1     1      0
                             _LCDout
                            _SendLCD
 ---------------------------------------------------------------------------------
 (2) _SendLCD                                              2     1      1     943
                                              2 COMRAM     2     1      1
                             _LCDout
 ---------------------------------------------------------------------------------
 (3) _LCDout                                               2     2      0      60
                                              0 COMRAM     2     2      0
                              _E_TOG
 ---------------------------------------------------------------------------------
 (4) _E_TOG                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCDout
       _E_TOG
     _SendLCD
       _LCDout
         _E_TOG
   _SendLCD
     _LCDout
       _E_TOG
   _SetLine
     _SendLCD
       _LCDout
         _E_TOG

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      5       5       1        5.3%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BIGRAM             2FF      0       0      10        0.0%
DATA                 0      0       0      11        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Oct 31 12:16:49 2017

                     l31 1F58                       l27 1ED2                       u55 1DFE  
                     u56 1E00                       u97 1E4E                      l800 1E4C  
                    l794 1E2E                      l798 1E42                      u107 1F7C  
                    u117 1F8C                      u207 1DEA                      u127 1F9A  
                    u137 1FA8                      u147 1FBA                      u157 1FD0  
                    u167 1FE6                      u177 1FF8                      u187 1E0A  
                    u197 1EC6                      wreg 000FE8                     _main 1ECE  
                   start 0000             ___param_bank 000010          __end_of_SendLCD 1E1A  
        __end_of_SetLine 1E56         __end_of_LCD_Init 2000                    ?_main 0001  
                  _E_TOG 1DE6                    _TRISC 000F94                    _TRISD 000F95  
                  status 000FD8          __initialization 1DE0             __end_of_main 1F5A  
         __CFG_OSC$IRCIO 000000                   ??_main 0006            __activetblptr 000000  
                 ?_E_TOG 0001                   _LCDout 1E56              SendLCD@Byte 0004  
                 _OSCCON 000FD3              SendLCD@type 0003                ??_SendLCD 0004  
              ??_SetLine 0005               __accesstop 0060  __end_of__initialization 1DE0  
              ?_LCD_Init 0001            ___rparam_used 000001              SetLine@line 0005  
          __end_of_E_TOG 1DF4           __pcstackCOMRAM 0001                  ??_E_TOG 0001  
                ?_LCDout 0001               ??_LCD_Init 0005          __size_of_LCDout 0078  
                _SendLCD 1DF4                  __Hparam 0000                  _SetLine 1E1A  
                __Lparam 0000                  __pcinit 1DE0                  __ramtop 0300  
                __ptext0 1ECE                  __ptext1 1E1A                  __ptext2 1F5A  
                __ptext3 1DF4                  __ptext4 1E56                  __ptext5 1DE6  
           LCDout@number 0002     end_of_initialization 1DE0                _TRISAbits 000F92  
         __end_of_LCDout 1ECE        __size_of_LCD_Init 00A6      start_initialization 1DE0  
               ??_LCDout 0001                 ?_SendLCD 0003                 ?_SetLine 0001  
         __size_of_E_TOG 000E                 _LCD_Init 1F5A                 _LATAbits 000F89  
               _LATCbits 000F8B                 _LATDbits 000F8C                 __Hrparam 0000  
       __size_of_SendLCD 0026                 __Lrparam 0000         __size_of_SetLine 003C  
          __size_of_main 008C               _OSCCONbits 000FD3  
